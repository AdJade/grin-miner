# Sample Server Configuration File for Grin-Miner
#
# Grin-Miner will look for this file in these places: in the following
# order:
#
# -The working directory
# -The directory in which the executable resides

#########################################
### LOGGING CONFIGURATION             ###
#########################################

[logging]

# Whether to log to stdout
log_to_stdout = true

# Log level for stdout: Critical, Error, Warning, Info, Debug, Trace
stdout_log_level = "Info"

# Whether to log to a file
log_to_file = true

# Log level for file: Critical, Error, Warning, Info, Debug, Trace
file_log_level = "Debug"

# Log file path
log_file_path = "grin-miner.log"

# Whether to append to the log file (true), or replace it on every run (false)
log_file_append = true

#########################################
### MINING CLIENT CONFIGURATION       ###
#########################################

[mining]

# whether to run the tui
run_tui = true

# listening grin stratum server url
stratum_server_addr = "127.0.0.1:13416"

# login for the stratum server (if required)
#stratum_server_login = "http://192.168.1.100:13415"

# password for the stratum server (if required)
#stratum_server_password = "x"

#The directory in which mining plugins are installed
#if not specified, grin miner will look in the directory /deps relative
#to the executable

#miner_plugin_dir = "target/debug/plugins"

#############################################
### CUCK(AT)OO MINER PLUGIN CONFIGURATION ###
#############################################

# Multiple plugins can be specified, (e.g. a cpu
# miner and a gpu miner running in parallel)

# You'll likely get the best performance using a
# single GPU plugin and single CPU plugin in parallel

# Parameters can be set per-device. On CPU plugins
# you'll likely only be using device 0 (for now),
# but in CUDA plugins the device number corresponds
# to the device ID. (use nvidia-smi to find this)

# The fastest cpu algorithm, but consumes the most memory
# Also requires instructions that aren't available on
# older processors. In this case, use mean_compat_cpu
# instead

[[mining.miner_plugin_config]]
plugin_name = "cuckatoo_mean_compat_cpu_29"
[mining.miner_plugin_config.parameters]
nthreads = 4

# As above, but for processors supporting avx2
#[[mining.miner_plugin_config]]
#edge_bits = 29
#type_filter = "cuckatoo_mean_cpu"
#[mining.miner_plugin_config.device_parameters.0]
#NUM_THREADS = 4

# LEAN
#[[mining.miner_plugin_config]]
#edge_bits = 29
#type_filter = "cuckatoo_lean_cpu"
#[mining.miner_plugin_config.device_parameters.0]
#NUM_THREADS = 4

#CUDA Miner
#
# Note! 4+ GB GPU cards only!
#   Tweak the MEM_GB parameter according to how much RAM your
#   card has (valid values are 4,5 or 7)
#   Docs: https://github.com/tromp/cuckoo/blob/master/GPU.md
#
#Can currently be used only in Production Mode
#This plugin is not built by default. To build:
#1) Ensure the latest cuda toolkit is installed
#   (nvcc should be in your PATH)
#   Wrong gcc? install gcc-5 g++-5; export CC=`which gcc-5`; # then build
#2) Uncomment the 'build-cuda-plugin' feature
#   in util/Cargo.toml
#
#Parameters can be set per device, as below.
#device 0 is used by default, and all other devices are
#disabled unless explicitly enabled by setting the 'USE_DEVICE'
#param to 1 on each device, as demonstrated below.

#[[mining.miner_plugin_config]]
#plugin_name = "cuckatoo_cuda_29"

#[mining.miner_plugin_config.parameters]
#device = 0
#expand = 1
#genablocks = 4096
#genatpb = 256
#genbtpb = 128
#trimtpb = 512
#tailtpb = 1024
#recoverblocks = 1024
#recovertpb = 1024


# To enable multiple devices:

#[[mining.miner_plugin_config]]
#plugin_name = "cuckatoo_cuda_29"
#[mining.miner_plugin_config.parameters]
#device = 1 



